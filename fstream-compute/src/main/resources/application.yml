---

#
# Copyright (c) 2014 fStream. All Rights Reserved.
# 
# Project and contact information: https://bitbucket.org/fstream/fstream
# 
# Unauthorized copying of this file, via any medium is strictly prohibited.
# Proprietary and confidential.
#

# Spring
spring:
   config:
      location: classpath:application-compute.yml
      
# ZooKeeper
zk:
   host: localhost
   port: 21812
   connect: ${zk.host}:${zk.port}

# Kafka
kafka:
   host: localhost
   port: 6667
   producerProperties: &kafkaProducerProperties
      metadata.broker.list:  ${kafka.host}:${kafka.port}
      request.required.acks: 1
      serializer.class: kafka.serializer.StringEncoder
      
# Storm
storm:
   local: true
   properties:

# Compute     
compute:

   # Common statements
   statements:

      - |
        CREATE CONTEXT 
           SegmentedBySymbol
        PARTITION BY 
           symbol 
        FROM
           Rate
      
   alerts:
         
      - name: Relative tick threshold
        description: Tick-to-tick percentage is greater than 1%
        statement: |
           CONTEXT SegmentedBySymbol
           SELECT
              ask / prior(1, ask) AS askPercentChange
           FROM
              Rate
           WHERE
              ask / prior(1, ask) > 1.01

      - name: Flat pricing
        description: Coded to fire many times. Final implementation would count < 1 every 60 secs.
        statement: |
           CONTEXT SegmentedBySymbol
           SELECT
               symbol, 
               COUNT(*) AS eventCnt 
           FROM
               Rate.win:time(10 sec)
           GROUP BY 
               symbol
           HAVING
               COUNT(*) < 5

      - name: bursty pricing
        description: A high amout of quote activity per second.
        statement: |
           CONTEXT SegmentedBySymbol
           SELECT
               symbol, 
               COUNT(*) AS eventCnt 
           FROM
               Rate.win:time(1 sec)
           GROUP BY 
               symbol
           HAVING
               COUNT(*) > 20

   metrics:

      - name: Simple stats
        description: Used to trigger at least one event every 5s for testing.
        statement: |
           CONTEXT SegmentedBySymbol
           SELECT
               symbol,
               COUNT(ask) AS count,
               AVG(ask)   AS avgAsk,
               AVG(bid)   AS avgBid,
               MIN(ask)   AS minAsk,
               MIN(bid)   AS minBid,
               MAX(ask)   AS maxAsk,
               MAX(bid)   AS maxBid
           FROM
               Rate.win:time_batch(5 sec)
               