---

#
# Copyright (c) 2014 fStream. All Rights Reserved.
# 
# Project and contact information: https://bitbucket.org/fstream/fstream
# 
# Unauthorized copying of this file, via any medium is strictly prohibited.
# Proprietary and confidential.
#

# ZooKeeper
zk:
   host: localhost
   port: 21812
   connect: ${zk.host}:${zk.port}

# Kafka
kafka:
   host: localhost
   port: 6667

# Storm
storm:
   local: true
   properties:
      metadata.broker.list:  ${kafka.host}:${kafka.port}
      request.required.acks: 1
      serializer.class: kafka.serializer.StringEncoder
 
# Esper      
esper:
   epl:
      # Create the partitions
      - |
        CREATE CONTEXT 
           SegmentedBySymbol
        PARTITION BY 
           symbol 
        FROM
           Rate
           
      # Business statements
      - |
        CONTEXT SegmentedBySymbol
        SELECT
           CAST(ask, float) / CAST(prior(1, ask), float) AS askPercentChange
        FROM
           Rate
        WHERE
           CAST(ask, float) / CAST(prior(1, ask), float) > 1.0001
        
      # Simple count
      - |
        CONTEXT SegmentedBySymbol
        SELECT
            COUNT(ask) AS count,
            AVG(ask)   AS avgAsk,
            MIN(ask)   AS minAsk,
            MAX(ask)   AS maxAsk
        FROM
            Rate.win:time_batch(5 sec)
            
      # flat pricing
      # coded to fire many times. Final implementation would count < 1 every 60 secs
      - |
        CONTEXT SegmentedBySymbol
        SELECT
            symbol,count(*) as eventCnt 
        FROM
            Rate.win:time(10 sec)
        GROUP BY 
            symbol
        HAVING
            count(*) < 5
            
