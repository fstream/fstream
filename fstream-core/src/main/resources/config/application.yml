---
# Copyright (c) 2014 fStream. All Rights Reserved.
# 
# Project and contact information: https://bitbucket.org/fstream/fstream
# 
# Unauthorized copying of this file, via any medium is strictly prohibited.
# Proprietary and confidential.

# State     
state:

   # Registered instruments
   symbols:
     - EUR/USD
     - USD/JPY
     - GBP/USD
     - AUD/USD
     - USD/CHF
     - USD/CAD
     - AUD/NZD
     - NZD/USD

   # Common statements
   statements:

      - |
        CREATE CONTEXT 
           SegmentedBySymbol
        PARTITION BY 
           symbol 
        FROM
           Rate
      
   alerts:
         
      - id: 1
        name: Relative Tick Threshold
        description: Tick-to-tick percentage is greater than 1%
        statement: |
           CONTEXT SegmentedBySymbol
           SELECT
              ask / prior(1, ask) AS askPercentChange, symbol,dateTime
           FROM
              Rate
           WHERE
              ask / prior(1, ask) > 1.01

      - id: 2
        name: Flat Pricing
        description: Coded to fire many times. Final implementation would count < 1 every 60 secs.
        statement: |
           CONTEXT SegmentedBySymbol
           SELECT
               symbol, dateTime,
               COUNT(*) AS eventCnt 
           FROM
               Rate.win:time(60 sec)
           GROUP BY 
               symbol
           HAVING
               COUNT(*) < 1

      - id: 3
        name: Bursty Pricing
        description: A high amount of quote activity per second.
        statement: |
           CONTEXT SegmentedBySymbol
           SELECT
               symbol, 
               COUNT(*) AS eventCnt 
           FROM
               Rate.win:time(1 sec)
           GROUP BY 
               symbol
           HAVING
               COUNT(*) > 20

      - id: 4
        name: AUDNZD Cross Mispricing
        description: Identifies AUDNZD cross pair mispricing
        statement: |
           SELECT 
               adt,  bdt,  cdt,
               amid, bmid, cmid, 
               amid - (bmid * cmid) AS diff
           FROM 
               Rate(symbol in ['AUD/USD','AUD/NZD','NZD/USD']).win:time(1 millisecond)
           MATCH_RECOGNIZE (
               MEASURES 
                  last(A.mid)      AS amid, last(B.mid)      AS bmid, 
                  last(C.mid)      AS cmid, last(A.dateTime) AS adt, 
                  last(B.dateTime) AS bdt,  last(C.dateTime) AS cdt
               PATTERN 
                  ((A+ B+ C+) | (A+ C+ B+) | (B+ A+ C+) | (B+ C+ A+) | (C+ A+ B+) | (C+ B+ A+)) 
               DEFINE
                  A AS Rate.symbol = 'AUD/USD',
                  B AS Rate.symbol = 'AUD/NZD',
                  C AS Rate.symbol = 'NZD/USD'
           )
           WHERE
               amid - (bmid * cmid) > 0.00001

   metrics:

      - id: 1
        name: Events per Minute
        description: Calculates the number of events per minute across all instruments
        units: Events / min
        statement: |
           SELECT
               COUNT(*) AS count
           FROM
               Rate.win:time_batch(1 min)

      - id: 2
        name: Alerts per Minute
        description: Calculates the number of alerts per minute
        units: Alert / min
        statement: |
           SELECT
               COUNT(*) AS count
           FROM
               Alert.win:time_batch(1 min)
               