# -*- mode: ruby -*-
# vi: set ft=ruby :
# Copyright (c) 2014 fStream. All Rights Reserved.
#
# fStream - VirtualBox VM Vagrant file
#
# Description: 
#   The is the Vagrant file for provisioning the fStream stack using the 
#   VirtualBox provider and Ansible as the provisioner.
#
# See:
#   - http://www.ansibleworks.com/docs/
#   - http://www.ansibleworks.com/docs/guide_vagrant.html
#   - http://jinja.pocoo.org/docs/templates/
#   - http://docs.vagrantup.com/v2/provisioning/ansible.html
#   - http://docs.vagrantup.com/v2/virtualbox/configuration.html
#   - https://github.com/pjan/the-ansibles

require "yaml"

# Config
ansible_path = "../../ansible"

# See https://github.com/mitchellh/vagrant/issues/2924
ENV['PYTHONIOENCODING'] = "utf-8"
ENV['ANSIBLE_ROLES_PATH']  = ansible_path + "/" + "roles"

CONFIG = File.open( File.join(File.dirname(__FILE__), 'vagrant.yml') ) { |yf| YAML::load( yf ) }

boxes = CONFIG['boxes']

Vagrant.configure("2") do |config|
  # Base box
  config.vm.box = "precise64" 
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  boxes.each_with_index do |box, index|
     config.vm.define box['name'] do |vms|
        # Hostname of the box 
        vms.vm.hostname = box['name']
        
        # Execute VirtualBox provider
        vms.vm.provider :virtualbox do |v|
         # Appliance name
          v.name = box['name']
        end
        
        if index == boxes.length - 1
	        # Execute Ansible provisioner
	        vms.vm.provision :ansible do |ansible|
	          ansible.playbook = "playbook.yml"
	          ansible.limit = 'all'
	          ansible.groups = {
	            "group1" => [ box['name'] ]
	          }
	          ansible.verbose = 'vv'
	          
	          # Avoids ssh: connect to host <ip-address> port 22: Host is down
	          ansible.raw_arguments = "--timeout=60"
	        end
        end
     end  
  end
end
