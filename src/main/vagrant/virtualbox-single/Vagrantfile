# -*- mode: ruby -*-
# vi: set ft=ruby :
# Copyright (c) 2014 fStream. All Rights Reserved.
#
# fStream - VirtualBox VM Vagrant file
#
# Description: 
#   The is the Vagrant file for provisioning the fStream stack using the 
#   VirtualBox provider and Ansible as the provisioner.
#
# See:
#   - http://www.ansibleworks.com/docs/
#   - http://www.ansibleworks.com/docs/guide_vagrant.html
#   - http://jinja.pocoo.org/docs/templates/
#   - http://docs.vagrantup.com/v2/provisioning/ansible.html
#   - http://docs.vagrantup.com/v2/virtualbox/configuration.html
#   - https://github.com/pjan/the-ansibles

# See https://github.com/mitchellh/vagrant/issues/2924
ENV['PYTHONIOENCODING'] = "utf-8"
ENV['ANSIBLE_ROLES_PATH'] = "../../ansible/roles"

# Stack in a single box
boxes = [{
    :name => "site",
    :ip => '10.211.55.100',
    :cpu => "50",
    :ram => "4096",
    :fowarded_ports => [{
      :guest => 8081, :host=> 8080
    }, {
      :guest => 8080, :host=> 8081 
    }]
}]

Vagrant.configure("2") do |config|
  # Base box
  config.vm.box = "precise64" 
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  boxes.each do |box|
     config.vm.define box[:name] do |vms|
        # Hostname of the box 
        vms.vm.hostname = box[:box]
      
        # Create a forwarded port mapping which allows access to a specific port
        # within the machine from a port on the host machine.
        box[:fowarded_ports].each do |port|
          # puts "Forwarding port from localhost:#{port[:guest]} to #{box[:name]}:#{port[:host]}"
          vms.vm.network :forwarded_port, guest: port[:guest], host: port[:host]
        end
        
        # Create a private network, which allows host-only access to the machine
        # using a specific IP. This IP is used in the Ansible inventory file.
        vms.vm.network :private_network, ip: box[:ip]  
        
        # Execute VirtualBox provider
        vms.vm.provider :virtualbox do |v|
         # Appliance name
          v.name = box[:box]
          
          # This should be a suitably large
          v.customize ["modifyvm", :id, "--memory", box[:ram]]
          v.customize ["modifyvm", :id, "--cpus", "8"]
        end
        
        # Execute Ansible provisioner
        vms.vm.provision :ansible do |ansible|
          ansible.playbook = "#{box[:name]}.yml"
          ansible.inventory_path = "inventory/hosts"
          ansible.limit = 'all'
          ansible.verbose = 'vv'
          
          # Avoids ssh: connect to host <ip-address> port 22: Host is down
          ansible.raw_arguments = "--timeout=60"
        end   
     end  
  end
end
